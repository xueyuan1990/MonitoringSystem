<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="storage">
	<select id="getStoragesByPage" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId
		order by s.groupId ,s.serverId limit #{start},#{limit}
	</select>
	<select id="getStorages" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId
		order by s.groupId ,s.serverId
	</select>
	<select id="getStoragesByGroup" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId and s.groupId=#{groupId}
		order by s.groupId ,s.serverId
	</select>
	<select id="getStorage" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId and s.groupId=#{groupId} and s.serverId=#{serverId}
	</select>
	<select id="getStoragesPeriod" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s
		where s.time between #{startTime} and #{endTime} and s.groupId=#{groupId} and
		s.serverId=#{serverId} 
		order by s.time
	</select>
	<select id="getGroupStorages" resultType="com.mz.entity.GroupStorage">
		select t.time time,gs.groupId groupId, gs.groupName groupName,gs.groupThreshold groupThreshold,t.grouptotal grouptotal, t.groupfree groupfree 
		from
		(select time,groupId,sum(total_storage) grouptotal, sum(free_storage) groupfree from storage s	where s.time=#{time} group by groupId) t,groupStorage gs 
		where gs.groupId=t.groupId order by gs.groupId
	</select>
	<select id="getServerThreshold" resultType="int">
	    select serverThreshold from serverStorage s where s.groupId=#{groupId} and s.serverId=#{serverId} 
	</select>
	<select id="getStoragesNum" resultType="int">
		select count(*) from storage s where time=#{time}
	</select>
	<select id="getLastTime" resultType="String">
		select s.time from storage s where s.id=(select max(id) from storage)
	</select>
	<select id="getStoragesOffline" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId and s.ip_addr like '%OFFLINE%'
	</select>
	<select id="getStoragesLessFreeStorage" resultType="com.mz.entity.Storage">
		select s.time time,	s.groupId groupId, s.serverId serverId, s.ip_addr ipAddr, s.total_storage totalStorage, s.free_storage	freeStorage, s.total_storage-s.free_storage usedStorage, ss.serverThreshold serverThreshold,s.success_upload_count successUploadCount, s.success_download_count successDownloadCount, s.last_heart_beat_time lastHeartBeatTime
		from storage s, serverStorage ss
		where s.time=#{time} and s.groupId=ss.groupId and s.serverId=ss.serverId and ss.serverThreshold>s.free_storage
	</select>
	<update id="setServerThreshold">
		update serverStorage set serverThreshold=#{serverThreshold} where groupId=#{groupId} and serverId=#{serverId}
	</update>
	<update id="setGroupThreshold">
		update groupStorage set groupThreshold=(select sum(serverThreshold) from serverStorage where groupId=#{groupId}) where groupId=#{groupId}
	</update>
</mapper> 