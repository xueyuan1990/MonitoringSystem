<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1392" started-at="2014-11-18T07:51:57Z" finished-at="2014-11-18T07:51:59Z">
    <groups>
      <group name="all-test">
        <method signature="TrackerServiceTest.testAlertOffline()[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="testAlertOffline" class="com.mz.service.TrackerServiceTest"/>
        <method signature="TrackerServiceTest.testSelectAllTracker()[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="testSelectAllTracker" class="com.mz.service.TrackerServiceTest"/>
      </group> <!-- all-test -->
    </groups>
    <test name="Default test" duration-ms="1392" started-at="2014-11-18T07:51:57Z" finished-at="2014-11-18T07:51:59Z">
      <class name="com.mz.service.TrackerServiceTest">
        <test-method status="PASS" signature="aBeforeClass(org.testng.ITestContext)[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="aBeforeClass" is-config="true" duration-ms="979" started-at="2014-11-18T15:51:57Z" finished-at="2014-11-18T15:51:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39dae9ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeClass -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="aBeforeMethod" is-config="true" duration-ms="3" started-at="2014-11-18T15:51:58Z" finished-at="2014-11-18T15:51:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mz.service.TrackerServiceTest.testAlertOffline()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="testAlertOffline()[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="testAlertOffline" duration-ms="381" started-at="2014-11-18T15:51:58Z" finished-at="2014-11-18T15:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertOffline -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="zAfterMethod" is-config="true" duration-ms="0" started-at="2014-11-18T15:51:59Z" finished-at="2014-11-18T15:51:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mz.service.TrackerServiceTest.testAlertOffline()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="testSelectAllTracker()[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="testSelectAllTracker" duration-ms="18" started-at="2014-11-18T15:51:59Z" finished-at="2014-11-18T15:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectAllTracker -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="aBeforeMethod" is-config="true" duration-ms="0" started-at="2014-11-18T15:51:59Z" finished-at="2014-11-18T15:51:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mz.service.TrackerServiceTest.testSelectAllTracker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="zAfterMethod" is-config="true" duration-ms="1" started-at="2014-11-18T15:51:59Z" finished-at="2014-11-18T15:51:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mz.service.TrackerServiceTest.testSelectAllTracker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="zAfterClass()[pri:0, instance:com.mz.service.TrackerServiceTest@4928f524]" name="zAfterClass" is-config="true" duration-ms="1" started-at="2014-11-18T15:51:59Z" finished-at="2014-11-18T15:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterClass -->
      </class> <!-- com.mz.service.TrackerServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
